/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IManager, IManagerInterface } from "../../contracts/IManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "headman",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    name: "SetVillageHead",
    type: "event",
  },
  {
    inputs: [],
    name: "onlyDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "villageHead",
        type: "address",
      },
    ],
    name: "onlyVillageHead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
    ],
    name: "setDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "villageHead",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    name: "setVillageHead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IManager__factory {
  static readonly abi = _abi;
  static createInterface(): IManagerInterface {
    return new Interface(_abi) as IManagerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IManager {
    return new Contract(address, _abi, runner) as unknown as IManager;
  }
}
